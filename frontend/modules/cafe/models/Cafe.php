<?php

namespace frontend\modules\cafe\models;

use Yii;

/**
 * This is the model class for table "cafe".
 *
 * @property int $id
 * @property string $name
 * @property int $max_person
 * @property string $address
 * @property string $tps_code
 * @property string $tvq_code
 * @property int $last_task
 * @property double $tps_value
 * @property double $tvq_value
 * @property int $franchisee
 *
 * @property Polls[] $polls
 * @property UserCafe[] $userCafes
 * @property UserTimetable[] $userTimetables
 */
class Cafe extends \yii\db\ActiveRecord
{
  /**
   * @var UploadedFile file attribute
   */
  public $image;

  private $galleryPath = '/web/img/logos/';

  private $imageParams = [
    'width' => 200,
    'height' => 200,
    'size' => 100,
    'newName' => false,
    'oldName' => false,
    'path' => '/web/img/logos/',
    'validated' = false
  ];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'cafe';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
      return [
        [['name', 'params_id'], 'required'],
        [['name', 'address','currency','timeZone'], 'trim'],
        [['name', 'address','currency','timeZone','vat_value', 'logo'], 'string'],
        [['max_person', 'last_task', 'franchisee'], 'integer'],
        ['image', 'image', 'extensions' => 'gif, jpg, jpeg, png'/*, 'skipOnEmpty' => false*/]
      ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'max_person' => Yii::t('app', 'Max Person'),
            'address' => Yii::t('app', 'Address'),
            'last_task' => Yii::t('app', 'Last Task'),
            'franchisee' => Yii::t('app', 'Franchisee'),
            'currency' => Yii::t('app', 'Currency'),
            'timeZone' => Yii::t('app', 'time Zone'),
            'logo' => Yii::t('app', 'Logo')
        ];
    }


  public function beforeValidate()
  {
    if (!parent::beforeValidate()) {
      return false;
    }

    if ($this->isNewRecord) {
      if (Yii::$app->user->isGuest) {
        $this->franchisee = 1;
      } else if (!Yii::$app->user->can('AllFranchisee')) {
        $this->franchisee = Yii::$app->user->identity->franchisee;
      }
    }

    return true;
  }

  public function beforeSave($insert)
  {
    if (parent::beforeSave($insert))
    {
      if ($this->image)
      {
        $this->imageParams['oldName'] = $this->getOldAttribute('logo');

        if ( ! $this->name)
        {
          $nameLen = strlen($this->image->name);
          $extLen = strlen('.' . $this->image->extension);

          $this->name = substr($this->image->name, 0, $nameLen - $extLen);

          $this->logo = $this->image->name;
        }

        $this->imageParams['newName'] = $this->logo;
        $this->imageParams['validated'] = true;
      }

      return true;
    }
    else
    {
      return false;
    }
  }

  public function afterSave($insert, $changedAttributes)
  {
    Yii::$app->cache->delete("cafe_params_".$this->id);
    parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

    if ($this->imageParams['validated'])
    {
      // $this->updateImage($this->image->tempName, $insert);
      $this->updateImage($insert);
    }
  }

  public function beforeDelete()
  {
    if (parent::beforeDelete()/* && ! $this->categories*/)
    {
      $this->imageParams['oldName'] = $this->ext;
      $this->setGalleryPath();
      $this->deleteImage();
      return true;
    }
    else
    {
      return false;
    }
  }

  private function getImageExt(string $name)
  {
    if (is_null($name))
    {
      return false;
    }

    $pos = strrpos($name, '.');
    return substr($name, $pos);
  }

  private function updateImage($insert)
  {
    $this->setGalleryPath();

    if ( ! $insert)
    {
      $this->deleteImage();
    }

    $this->setImagePath();

    // Image::$driver = Image::DRIVER_GD2;

    $this->createImage();
  }

  private function deleteImage()
  {
    if (/* ! $this->curModelId && */ ! $this->imageParams['oldName'])
    {
      return;
    }

    $this->setImagePath(false);

    if (file_exists($this->imageParams['path']))
    {
      return unlink($this->imageParams['path']);
    }
  }

  private function setGalleryPath()
  {
    // $this->galleryPath = Yii::getAlias('@gallery') . '/';
    $this->galleryPath = Yii::getAlias('@webroot') . $this->galleryPath;
  }

  private function createImage()
  {
    (new SimpleImage($this->image->tempName))->
      best_fit(
        $this->imageParams['width'],
        $this->imageParams['height']
      )->
      save($this->imageParams['path'], 100);

    // $this->fileModel->image->saveAs($this->imageParams['path']);

    // Image::thumbnail(
    //   $this->image->tempName,
    //   $this->imageParams['width'],
    //   $this->imageParams['height'],
    //   ManipulatorInterface::THUMBNAIL_INSET
    // )->
    //   save($this->imageParams['path'], ['quality' => 100]);
  }

  private function setImagePath($new = true)
  {
    $name = $new ? $this->imageParams['newName'] : $this->imageParams['oldName'];

    $this->imageParams['path'] = $this->galleryPath . $name;
  }

  /**
   * @return \yii\db\ActiveQuery
   */
  public function getPolls()
  {
      return $this->hasMany(Polls::className(), ['cafe_id' => 'id']);
  }

  /**
   * @return \yii\db\ActiveQuery
   */
  public function getUserCafes()
  {
      return $this->hasMany(UserCafe::className(), ['cafe_id' => 'id']);
  }

  /**
   * @return \yii\db\ActiveQuery
   */
  public function getParam()
  {
    return $this->hasOne(CafeParams::className(), [ 'id'=>'params_id']);
  }

  /**
   * @return \yii\db\ActiveQuery
   */
  public function getUserTimetables()
  {
      return $this->hasMany(UserTimetable::className(), ['cafe_id' => 'id']);
  }
}
