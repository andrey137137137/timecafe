<?php

namespace frontend\modules\visits\controllers;

use frontend\modules\visits\models\StartVisit;
use frontend\modules\visits\models\VisitorLog;
use kartik\widgets\Typeahead;
use Yii;
use yii\helpers\Html;
use yii\web\Controller;
use yii\web\ForbiddenHttpException;
use yii\web\Response;

/**
 * Default controller for the `visits` module
 */
class DefaultController extends Controller
{

  public function beforeAction($action)
  {
    if (Yii::$app->user->isGuest || !Yii::$app->cafe->can("startVisit")) {
      throw new ForbiddenHttpException(Yii::t('app', 'Page does not exist'));
      return false;
    }

    $request = Yii::$app->request;
    if (!$request->isAjax) {
      throw new ForbiddenHttpException(Yii::t('app', 'Page does not exist'));
      return false;
    }
    Yii::$app->response->format = Response::FORMAT_JSON;

    return parent::beforeAction($action); // TODO: Change the autogenerated stub
  }

  public function actionStart()
  {
    $request = Yii::$app->request;
    $model = new StartVisit();

    $type_list = VisitorLog::typeList();

    if ($model->load($request->post()) && $model->validate()) {
      if ($model->type == 2) {
        $model = StartVisit::find()->where(['id' => $model->id])->one();
        $model->load($request->post());
      }
      if ($model->type == 1) $model->id = null;

      if (
          count($model->errors) == 0 &&
          ($model->type == 0 || $model->save())
      ) {
        $visit = new VisitorLog();
        if ($model->type > 0) {
          $visit->visitor_id = $model->id;
        }
        $visit->type = $model->type;
        $visit->user_id = Yii::$app->user->id;
        $visit->cafe_id = Yii::$app->cafe->id;
        $visit->add_time = date("Y-m-d H:i:s");

        if ($visit->save()) {
          Yii::$app->session->addFlash('success', Yii::t('app', 'New visitor added to cafe'));
          return [
              'title' => "",
              'content' => Yii::$app->view->closeModal(),
              'footer' => ""
          ];
        }

        if (count($model->errors) == 0 && $model->type == 1) {
          $model->type = 2;
        }
        Yii::$app->session->addFlash('error', Yii::t('app', 'Error added visitor to cafe'));
      }
    };

    if ($model->type === false) $model->type = key($type_list);
    if (!$model->lg) $model->lg = Yii::$app->user->identity->lg;

    $js = '<script>
        $("#startvisit-f_name").bind(\'typeahead:select\', userAA)
        .bind(\'typeahead:change\', userAA);
        $(\'.modal-body\').find(\'input,select\').not("[type=radio]").on(\'change\',userAA);
       </script>';

    return [
        'title' => Yii::t('app', "Start new visit"),
        'content' => $this->renderAjax('start', [
                'model' => $model,
                'AJ_classname' => Typeahead::classname(),
                'type_list' => $type_list
            ]) . $js,
        'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]) .
            Html::button(Yii::t('app', 'Start'), ['class' => 'btn btn-primary', 'type' => "submit"])

    ];
  }

  public function actionView($id)
  {
    $model = VisitorLog::find()->where(['id' => $id])->one();

    if (!$model) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "Visit not found"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    /*return $this->renderAjax('view', [
        'model'=>$model,
        'cafe' => Yii::$app->cafe,
    ]);*/

    $button = Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]);

    if ($model->cost !== false) {
      if($model->pause_start){
        $button .= Html::a(Yii::t('app', 'Resume'), ['/visits/pause', 'id' => $model->id,'resume'=>true], ['class' => 'btn bg-blue fg-white', "role" => "modal-remote"]);
      }else{
        $button .= Html::a(Yii::t('app', 'Pause'), ['/visits/pause', 'id' => $model->id], ['class' => 'btn bg-blue fg-white', "role" => "modal-remote"]);
      }

      $button .= Html::a(Yii::t('app', 'Stop'), ['/visits/stop', 'id' => $model->id], ['class' => 'btn btn-success', "role" => "modal-remote"]);
    }

    $model->endPause(true);
    return [
        'title' => '<span class="fa fa-user antagon-color-main"></span>' . Yii::t('app', "Estimation visit"),
        'content' => $this->renderAjax('view', [
            'model' => $model,
            'cafe' => Yii::$app->cafe,
        ]),
        'footer' => $button,
      'header'=>"1231",
    ];
  }

  public function actionPause($id,$resume=false){
    $model = VisitorLog::find()->where(['id' => $id])->one();

    if (!$model) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "Visit not found"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),

      ];
    }

    if($model->finish_time){
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "The visit has already been completed"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    if($resume){
      if($model->pause_start==0){
        return [
            'title' => Yii::t('app', "View visit error"),
            'content' => Yii::t('app', "The visit is not on a pause"),
            'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
        ];
      }
      $model->endPause();
    }else{
      if($model->pause_start>0){
        return [
            'title' => Yii::t('app', "View visit error"),
            'content' => Yii::t('app', "The visit is already on a pause"),
            'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
        ];
      }
      $model->pause_start=time();
    }
    $model->save();

    Yii::$app->session->addFlash('success', Yii::t('app', $resume?'The visit was removed from a pause.':'The visit is paused'));
    return [
        'title' => "",
        'content' => Yii::$app->view->closeModal(),
        'footer' => ""
    ];

  }

  public function actionStop($id)
  {
    $model = VisitorLog::find()->where(['id' => $id])->one();

    if (!$model) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "Visit not found"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    if($model->finish_time){
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "The visit has already been completed."),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    $model->endPause();
    $model->finish_time = date("Y-m-d H:i:s");
    $model->save();

    Yii::$app->session->addFlash('success', Yii::t('app', 'The visit was successfully completed.'));

    return $this->actionPay($id);
  }

  public function actionPay($id,$method=false){

    $model = VisitorLog::find()->where(['id' => $id])->one();

    if (!$model) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "Visit not found"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    if ($model->pay_state!=0) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "The visit has already been paid."),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    $button = '';//Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]);
    $request = Yii::$app->request;

    if(Yii::$app->cafe->can('payNOT')){
      if($method=="NOT"){
        if ($model->load($request->post()) && $model->validate()) {
          if(mb_strlen($model->comment)<10){
            $model->addError(
                'comment',
                Yii::t(
                    'app',
                    'Field is required.'));;
          }else{
            //сохраняем и идем на следующий шаг
            $model->pay_state=-1;
            $model->save();
            return $this->actionPrint_check($id);
          }
        }

        $button = Html::a(Yii::t('app', 'Back'),
            ['/visits/pay', 'id' => $model->id],
            ['class' => 'btn btn-default pull-left', "role" => "modal-remote"]
        );
        $button .= Html::button(
            '<i class="icon-metro-cc-nc"></i>'.Yii::t('app', 'Not Paid'),
            ['class' => 'btn bg-scarlet fg-white', 'type' => "submit"]
        );
        return [
            'title' => Yii::t('app', "Acceptance of payment (NOT PAY)."),
            'content' => $this->renderAjax('not_pay', [
                'model' => $model,
                'cafe' => Yii::$app->cafe,
            ]),
            'footer' => $button
        ];
      }

      $button .= Html::a(
          '<i class="icon-metro-cc-nc"></i>'.Yii::t('app', 'Not Paid'),
          ['/visits/pay', 'id' => $model->id,'method'=>"NOT"],
          ['class' => 'btn bg-scarlet fg-white', "role" => "modal-remote"]
      );
    }

    if(Yii::$app->cafe->can('payCard')){
      if($method=="Card"){
        //сохраняем и идем на следующий шаг
        $model->pay_state=1;
        $model->save();
        return $this->actionPrint_check($id);
      };
      $button .= Html::a(
          '<i class="fa fa-credit-card"></i>'.Yii::t('app', 'Pay Card'),
          ['/visits/pay', 'id' => $model->id,'method'=>"Card"],
          ['class' => 'btn btn-info fg-white', "role" => "modal-remote"]
      );
    }

    if(Yii::$app->cafe->can('payCash')){
      if($method=="Cash"){
        //сохраняем и идем на следующий шаг

        $model->pay_state=2;
        $model->save();
        return $this->actionPrint_check($id);
      };
      $button .= Html::a(
          '<i class="fa fa-money"></i>'.Yii::t('app', 'Pay Cash'),
          ['/visits/pay', 'id' => $model->id,'method'=>"Cash"],
          ['class' => 'btn btn-success fg-white', "role" => "modal-remote"]
      );
    }

    return [
        'title' => Yii::t('app', "Acceptance of payment."),
        'content' => $this->renderAjax('stop', [
            'model' => $model,
            'cafe' => Yii::$app->cafe,
        ]),
        'footer' => $button
    ];
  }


  public function actionPrint_check($id,$method=false){
    $model = VisitorLog::find()->where(['id' => $id])->one();

    if (!$model) {
      return [
          'title' => Yii::t('app', "View visit error"),
          'content' => Yii::t('app', "Visit not found"),
          'footer' => Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]),
      ];
    }

    $button = Html::button(Yii::t('app', 'Close'), ['class' => 'btn btn-default pull-left', 'data-dismiss' => "modal"]);

    /*$button .= Html::a(
        '<i class="fa fa-print"></i>'.Yii::t('app', 'Print check'),
        ['/visits/print_check', 'id' => $model->id,'method'=>"print"],
        ['class' => 'btn btn-blue-gem', "role" => "modal-remote"]
    );

    $button .= Html::a(
        '<i class="fa fa-envelope-o"></i>'.Yii::t('app', 'Send mail'),
        ['/visits/print_check', 'id' => $model->id,'method'=>"mail"],
        ['class' => 'btn btn-success', "role" => "modal-remote"]
    );*/
    return [
        'title' => Yii::t('app', "Check visit"),
        'content' => $this->renderAjax('stop', [
            'model' => $model,
            'cafe' => Yii::$app->cafe,
        ]),
        'footer' => $button
    ];
  }
}
